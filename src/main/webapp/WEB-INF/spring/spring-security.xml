<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
 
    <http pattern="/resources/**" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/images/**" security="none"/>
    <http pattern="/fonts/**" security="none"/>
    <http pattern="/font-awesome/**" security="none"/>

    <http auto-config="true" >
        <!-- loginは全てのユーザがアクセス可能 security="none"にするとcsrfが動作しないため、IS_AUTHENTICATED_ANONYMOUSLYで許可-->
        <intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/invalidSession.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/**" access="ROLE_USER" />
        <form-login login-page="/login" default-target-url="/" authentication-failure-url="/login?error=1"/>
        <logout logout-success-url="/login" invalidate-session="true" logout-url="/logout" />
        <remember-me services-ref="rememberMeServices"/>
        <csrf />
    </http>

    <beans:bean id="rememberMeFilter"
      class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
      <beans:constructor-arg index="0" ref="authenticationManager" />
      <beans:constructor-arg index="1" ref="rememberMeServices"/>
    </beans:bean>

    <beans:bean id="rememberMeServices"
      class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
      <beans:constructor-arg index="0" value="springRocks"/>
      <beans:constructor-arg index="1" ref="customUserDetailsService"/>
      <beans:constructor-arg index="2" ref="persistentTokenRepository"/>
    </beans:bean>

    <beans:bean id="rememberMeAuthenticationProvider"
      class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
      <beans:constructor-arg name="key" value="springRocks"/>
    </beans:bean>

    <beans:bean id="persistentTokenRepository"
      class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
      <beans:property name="dataSource" ref="dataSource" />
    </beans:bean>

    <!-- Configure Authentication mechanism -->
    <authentication-manager alias="authenticationManager">
        <!-- SHA-256 values can be produced using 'echo -n your_desired_password | sha256sum' (using normal *nix environments) -->
        <authentication-provider user-service-ref="customUserDetailsService" >
            <!-- testが面倒なのでひとまず生パスワードを格納 -->
            <!-- <password-encoder hash="sha-256"/> -->
            <!-- 
            <jdbc-user-service data-source-ref="dataSource"
                users-by-username-query="SELECT user_name, password, enabled FROM users WHERE user_name = ?"
                authorities-by-username-query="SELECT user_name, 'ROLE_USER' FROM users WHERE user_name = ?"
            />
             -->
        </authentication-provider>
        <authentication-provider ref="rememberMeAuthenticationProvider">
        </authentication-provider>
    </authentication-manager>

    <aop:config>
      <aop:advisor pointcut="execution(* org.springframework.security.web.authentication.rememberme.*.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <tx:advice id="txAdvice" >
      <tx:attributes>
        <tx:method name="*" propagation="REQUIRED" />
      </tx:attributes>
    </tx:advice>

    <!-- JdbcDaoImplを拡張したUserDetailsServiceの実装クラスの設定 -->
    <beans:bean id="customUserDetailsService" class="com.tt.sabamiso.framework.core.service.CustomUserDetailsService">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="usersByUsernameQuery"
            value="select user_name, password, enabled, company_id, nickname from users where user_name = ?" />
        <beans:property name="authoritiesByUsernameQuery"
            value="select user_name, 'ROLE_USER' from users where user_name = ?" />
    </beans:bean>

</beans:beans>
